<?php
// TAKES $formpanel->config_array and sets $formpanel->config_array['items'] and $formpanel->config_array['buttons'] recursively (per (tab)page)
// REQUIRES $edit_key (for current edit.display (or edit.page.pagename.display, etc)

//TODO THIS SHOULD BE MOVED TO A HELPER or something!!!!!
//THIS IS NOT A TEMPLATE WITH ONE-TO-ONE RELATIONSHIP TO THE CACHED VERSION, multiple instances can exist in cache (with different names)
// the content gets included into template (generators)

  // stop if no key is provided
  if (!isset($edit_key))
  {
    return;
  }

  //stop if no fields defined
//  if ($this->getParameterValue($edit_key)==array())
//  {
//    return;
//  }

  $tableName = $this->getTableName();

  $display = $this->getParameterValue($edit_key.'.display', array());
  $hides = $this->getParameterValue($edit_key.'.hide', array());
  $pages = $this->getParameterValue($edit_key.'.pages', array());

  $groupedColumns = $this->getColumnsGrouped($edit_key.'.display', true);
  $pkn = $groupedColumns['pk']->getName();

  //iterate through all fields without fieldset
  $columns = $this->getListColumns($groupedColumns, false, 'NONE');
  $columns = $this->sortColumns($columns);

  // reset $columns, if edit.display not set and pages are set
  if (($edit_key=='edit') && (count($pages)>0) && (count($display)==0))
  {
    $columns = array();
  }

  foreach ($columns as $column):
    if (in_array($column->key, $hides) || ($column->isInvisible())) continue;

    $fieldName = str_replace('/', $this->tableDelimiter, $column->key);
//    $cls=""; if (isset($columnDef['options']['allowBlank']) && ($columnDef['options']['allowBlank']==='false')) $cls = " class='required'";

    $credentials = $this->getParameterValue($edit_key.'.fields.'.$column->key.'.credentials');
?>
<?php if ($credentials): ?>
[?php if ($sf_user->hasCredential(<?php echo str_replace("\n", ' ', var_export($credentials, true)) ?>)): ?]
<?php endif; ?>
$formpanel->config_array['items'][] = <?php var_export($this->getColumnAjaxEditDefinition($column, $groupedColumns, $edit_key)) ?>;
<?php if ($credentials): ?>
[?php endif; ?]
<?php endif; ?>
<?php endforeach; ?>
<?php foreach ($this->getColumnCategories($edit_key.'.display') as $category): ?>
<?php if ($category == 'NONE') continue; ?>
$fieldset = array(
  'xtype'       => 'fieldset',
  'title'       => '<?php echo $category?>',
  'collapsible' => false,
  'autoHeight'  => true,
  'style'   => 'padding:10px;',
  'bodyStyle'   => 'padding:0px 0px;',
);
<?php
  $params = $this->getParameterValue($edit_key, array());
  $user_params = isset($params['params_'.$category]) ? $params['params_'.$category] : null;
  if (is_array($user_params)):
?>
    $fieldset = array_merge($fieldset, <?php var_export($user_params) ?>);
<?php endif; ?>

<?php
  //iterate through all fields in a fieldset
  $columns = $this->getListColumns($groupedColumns, false, $category);
  $columns = $this->sortColumns($columns);

  // reset $columns, if edit.display not set and pages are set
  if (($edit_key=='edit') && isset($pages) && ((!isset($display)) || ($display==array())))
  {
    $columns = array();
  }

  foreach ($columns as $column):
    if (in_array($column->key, $hides)) continue;

    $fieldName = str_replace('/', $this->tableDelimiter, $column->key);
//    $cls=""; if (isset($columnDef['options']['allowBlank']) && ($columnDef['options']['allowBlank']==='false')) $cls = " class='required'";

    $credentials = $this->getParameterValue($edit_key.'.fields.'.$column->key.'.credentials');
?>
<?php if ($credentials): ?>
[?php if ($sf_user->hasCredential(<?php echo str_replace("\n", ' ', var_export($credentials, true)) ?>)): ?]
<?php endif; ?>
$fieldset['items'][] = <?php var_export($this->getColumnAjaxEditDefinition($column, $groupedColumns, $edit_key)) ?>;
<?php if ($credentials): ?>
[?php endif; ?]
<?php endif; ?>
<?php endforeach; ?>
$formpanel->config_array['items'][] = $fieldset;
<?php endforeach; ?>
<?php if (count($pages) > 0): ?>
  $form_config_org[] = $formpanel->config_array;
  $tabpages_config_items_org = array();
  if (isset($tabpages_config_items)) $tabpages_config_items_org[] = $tabpages_config_items;
  $tabpages_config_items = array();
<?php foreach($pages as $pageName => $page): ?>
<?php $edit_key_page = $edit_key.'.pages.'.$pageName; ?>
<?php $edit_key_name = str_replace('.', '_', $edit_key_page); ?>
<?
  $edit_key_org[] = $edit_key;
  $edit_key = $edit_key_page;

  //create template-file for tab-page
  ob_start();
    require('__edit_form_inner.php'); // recursively include itself with different edit_key (containing the current tab-page)
  $tabPage = "[?php\n".ob_get_clean()."\n?]";

  //save it
  $content = $tabPage;

  // replace [?php and ?]
  $content = $this->replacePhpMarks($content);

  $retval = "<?php\n".
            "// auto-generated by ".$this->getGeneratorClass()."\n".
            "// date: %s\n?>\n%s";
  $retval = sprintf($retval, date('Y/m/d H:i:s'), $content);

  // save template file
  $template = '_tabpage_'.$edit_key_name.'.php';
  $this->getGeneratorManager()->getCache()->set($template, $this->generatedModuleName.DIRECTORY_SEPARATOR.'templates', $retval);

  $edit_key = array_pop($edit_key_org);
?>
    $formpanel->config_array = array();
    include('<?php echo '_tabpage_'.$edit_key_name.'.php' ?>');

    // create a tab-page from the include(d items and buttons)
    $tab_page_form = array(
      'title'               => '<?php echo $this->getParameterValue($edit_key_page.'.title', $pageName) ?>',

      'layout'              => 'form',
      'defaultType'         => 'textfield',
      'autoHeight'          => true,

    );
    if (isset($formpanel->config_array['items']))
    {
      $tab_page_form['items'] = $formpanel->config_array['items'];
    }
<?php
  $user_params = $this->getParameterValue($edit_key_page.'.params', null);
  if (is_array($user_params)):
?>
    $tab_page_form = array_merge($tab_page_form, <?php var_export($user_params) ?>);
<?php endif; ?>

    if (isset($formpanel->config_array['buttons']) && ($formpanel->config_array['buttons']!=array()))
    {
      $tab_page_form['buttons'] = $formpanel->config_array['buttons'];
    }

    $tabpages_config_items[] =  $sfExtjs2Plugin->asAnonymousClass($tab_page_form);
<?php
  //restore
  $edit_key_page = $edit_key;
  $edit_key_name = str_replace('.', '_', $edit_key_page);
?>
<?php endforeach ?>
    //restore $form_connfig after iterations
    $formpanel->config_array = array_pop($form_config_org);

    $tabpages_config = array(
      'xtype'               => 'tabpanel',

      'deferredRender'      => false, // make it a app/generator config option if it bothers someone...
      'bodyStyle'           => 'background:#F0F0F0 none repeat scroll 0% 50%', //this should be done by some css-class, but don't know which... white is ugly

      'defaults'            => array('bodyStyle' => 'padding:10px'),

      'layoutOnTabChange'   => true,
      'activeTab'           => 0,

      'items'               => $tabpages_config_items
    );
<?php
  $user_params = $this->getParameterValue($edit_key_page.'.container_params', null);
  if (is_array($user_params)):
?>
    $tabpages_config = array_merge($tabpages_config, <?php var_export($user_params) ?>);
<?php endif; ?>
    $tabpages_config = $sfExtjs2Plugin->asAnonymousClass($tabpages_config);

    $tabpages_config_items = array_pop($tabpages_config_items_org);

    // add tab-pages to formpanel
    $formpanel->config_array['items'][] = $tabpages_config;

<?php endif ?>

// add buttons to formpanel
<?php
$editActions = $this->getParameterValue($edit_key.'.actions');
// set default buttons, if in edit
if (($editActions === null) && ($edit_key == 'edit'))
{
  $editActions = array(
//    '_reload' => false,
    '_save'   => false,
    '_delete' => false,
    '_cancel' => false,
  );
}

if (count($editActions) > 0): ?>
  $formpanel->config_array['tbar'] = array();
<?php foreach ($editActions as $actionName => $params): ?>
    //TODO: add credential check
    $formpanel->config_array['tbar'][] = <?php var_export($this->getEditAjaxActionToButton($actionName, $params, $edit_ns, true)) ?>;
<?php endforeach ?>
<?php endif ?>
